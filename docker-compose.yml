version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./
      dockerfile: ./build_env/frontend/${DOCKERFILE}
    restart: always
    ports:
      - ${FRONTEND_PORTS}
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: ./build_env/backend/api/${DOCKERFILE}
    restart: always
    ports:
      - 4000:4000
    environment:
      - S3_BUCKET_NAME=images
      - S3_ENDPOINT=s3:9006
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      - db
      - s3
      - rabbitmq
      - generate

  generate:
    container_name: generate
    build:
      context: ./
      dockerfile: ./build_env/backend/generate/${DOCKERFILE}
    restart: always
    environment:
      - S3_BUCKET_NAME=images
      - S3_ENDPOINT=s3:9006
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      - db
      - s3
      - rabbitmq
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]


  s3:
    container_name: s3
    image: minio/minio
    restart: always
    command: server --console-address ":9007" --address ":9006" /data
    ports:
      - "9006:9006"
      - "9007:9007"
    volumes:
      - ./data:/data
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin

  db:
    container_name: db
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - 'rabbitmq_data:/var/lib/rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: 'user'
      RABBITMQ_DEFAULT_PASS: 'password'
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_EXCHANGE_TYPE: "topic"

volumes:
  data:
  pgdata:
  rabbitmq_data:

