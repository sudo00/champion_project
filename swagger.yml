openapi: 3.0.0

info:
  title: Champions API
  version: 1.0.0
  description: API for user registration, login and protected routes with JWT authentication.

servers:
  - url: http://localhost:4000
    description: Dev server

paths:
  /register:
    post:
      tags:
        - "Auth"
      summary: Register a new user and obtain a JWT token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the new user
                password:
                  type: string
                  description: The password of the new user
              required:
                - username
                - password
      responses:
        '201':
          description: JWT token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token
        '400':
          description: Missing username or password
  /login:
    post:
      tags:
        - "Auth"
      summary: Login a user and obtain a JWT token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user
                password:
                  type: string
                  description: The password of the user
              required:
                - username
                - password
      responses:
        '200':
          description: JWT token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token
        '401':
          description: Invalid credentials
  /generate:
    post:
      tags:
        - "Image"
      summary: Generate image/banner/inpaint
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - image
                    - banner
                    - inpaint
                options:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/Image'
                    - $ref: '#/components/schemas/Banner'
                    - $ref: '#/components/schemas/Inpaint'
      responses:
        '200':
          description: Start generate
  /history:
    get:
      tags:
        - "Image"
      summary: Get history of images
      parameters:
      - name: id
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Image list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: id of history
                    status:
                      type: string
                      description: Status of history
                    object_name:
                      type: string
                      description: Image
                    options:
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/Image'
                        - $ref: '#/components/schemas/Banner'
                        - $ref: '#/components/schemas/Inpaint'
  /image/{object_name}:
    get:
      tags:
        - "Image"
      summary: Get image from history
      parameters:
        - in: path
          name: object_name
          schema:
            type: string
          required: true
          description: object name
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Image
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Image:
      type: object
      properties:
        width:
          type: string
          description: Width of image
          example: 256
        height:
          type: string
          description: Height of image
          example: 256
        count:
          type: string
          description: Count of images to generate
          example: 1
        product_type:
          type: string
          description: Type of product to generate
          example: credit_card
        positive_prompt:
          type: string
          description: Positive promt
        negative_prompt:
          type: string
          description: Negative promt
        offer:
          type: string
          description: Offer
      required:
        - width
        - height
        - count
        - product_type
    Banner:
      type: object
      properties:
        image_id:
          type: integer
          description: Id of image to generate banner
          example: 1
        type:
          type: string
          description: Type of banner
          example: credit_card
        position:
          type: string
          description: Position of banner
          example: center
        color:
          type: string
          description: Color of banner
          example: blue
      required:
        - image_id
        - type
        - position
        - color
    Inpaint:
      type: object
      properties:
        image_id:
          type: integer
          description: Id of image to inpaint
          example: 1
        mask:
          type: string
          description: Mask to inpaint
          example: 1, 15
        positive_prompt:
          type: string
          description: Positive promt
        negative_prompt:
          type: string
          description: Negative promt
      required:
        - image_id
        - mask
